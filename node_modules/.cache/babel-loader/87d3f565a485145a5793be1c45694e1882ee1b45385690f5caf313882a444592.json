{"ast":null,"code":"var _jsxFileName = \"/Users/Justopolis/Desktop/React/01-starting-setup/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport \"./ExpenseForm.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // If you use a single useState\n  // const [userInput, setUserInput] = useState(\n  //     {\n  //         enteredTitle: '',\n  //         enteredAmount: '',\n  //         enteredDate: ''\n  //     }\n  // )\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n\n    // For use in single useState call.\n    // setUserInput((prevState) => {\n    //     return {...prevState, enteredTitle: event.target.value}\n    // })\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredAmount('');\n    setEnteredTitle('');\n    setEnteredDate('');\n  };\n  let addExpense = false;\n  if (addExpense) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: enteredTitle,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: enteredAmount,\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: enteredDate,\n            min: \"01-01-2022\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addExpense = false,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n};\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","addExpense"],"sources":["/Users/Justopolis/Desktop/React/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import \"./ExpenseForm.css\"\nimport { useState } from \"react\"\n\nconst ExpenseForm = (props) => {\n\n    const [enteredTitle, setEnteredTitle] = useState('')\n    const [enteredAmount, setEnteredAmount] = useState('')\n    const [enteredDate, setEnteredDate] = useState('')\n\n    // If you use a single useState\n    // const [userInput, setUserInput] = useState(\n    //     {\n    //         enteredTitle: '',\n    //         enteredAmount: '',\n    //         enteredDate: ''\n    //     }\n    // )\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value)\n\n        // For use in single useState call.\n        // setUserInput((prevState) => {\n        //     return {...prevState, enteredTitle: event.target.value}\n        // })\n    }\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value)\n    }\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value)\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n\n        props.onSaveExpenseData(expenseData);\n        setEnteredAmount('');\n        setEnteredTitle('');\n        setEnteredDate('')\n    }\n\n    let addExpense = false\n\n    if (addExpense) {\n        return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input type='number' value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input type='date' value={enteredDate} min=\"01-01-2022\" onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div>\n                <button type=\"submit\">Add Expense</button>\n                <button onClick={addExpense=false}>Cancel</button>\n            </div>\n        </form>\n    )\n    }\n}\n\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}